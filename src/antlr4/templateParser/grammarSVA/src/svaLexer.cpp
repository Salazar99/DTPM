
// Generated from sva.g4 by ANTLR 4.10.1

#include "svaLexer.h"

using namespace antlr4;

using namespace antlr4;

namespace {

struct SvaLexerStaticData final {
  SvaLexerStaticData(std::vector<std::string> ruleNames,
                     std::vector<std::string> channelNames,
                     std::vector<std::string> modeNames,
                     std::vector<std::string> literalNames,
                     std::vector<std::string> symbolicNames)
      : ruleNames(std::move(ruleNames)), channelNames(std::move(channelNames)),
        modeNames(std::move(modeNames)), literalNames(std::move(literalNames)),
        symbolicNames(std::move(symbolicNames)),
        vocabulary(this->literalNames, this->symbolicNames) {}

  SvaLexerStaticData(const SvaLexerStaticData &) = delete;
  SvaLexerStaticData(SvaLexerStaticData &&) = delete;
  SvaLexerStaticData &operator=(const SvaLexerStaticData &) = delete;
  SvaLexerStaticData &operator=(SvaLexerStaticData &&) = delete;

  std::vector<antlr4::dfa::DFA> decisionToDFA;
  antlr4::atn::PredictionContextCache sharedContextCache;
  const std::vector<std::string> ruleNames;
  const std::vector<std::string> channelNames;
  const std::vector<std::string> modeNames;
  const std::vector<std::string> literalNames;
  const std::vector<std::string> symbolicNames;
  const antlr4::dfa::Vocabulary vocabulary;
  antlr4::atn::SerializedATNView serializedATN;
  std::unique_ptr<antlr4::atn::ATN> atn;
};

std::once_flag svalexerLexerOnceFlag;
SvaLexerStaticData *svalexerLexerStaticData = nullptr;

void svalexerLexerInitialize() {
  assert(svalexerLexerStaticData == nullptr);
  auto staticData = std::make_unique<SvaLexerStaticData>(
      std::vector<std::string>{"T__0",
                               "T__1",
                               "T__2",
                               "T__3",
                               "T__4",
                               "T__5",
                               "T__6",
                               "T__7",
                               "T__8",
                               "DT_AND",
                               "SEP",
                               "EVENTUALLY",
                               "ALWAYS",
                               "NEXT",
                               "UNTIL",
                               "RELEASE",
                               "DOTS",
                               "IMPL",
                               "IMPL2",
                               "IFF",
                               "XOR",
                               "BIND1",
                               "BIND2",
                               "ASS",
                               "DELAY",
                               "SCOL",
                               "COL",
                               "FIRST_MATCH",
                               "SIGN",
                               "LGPAREN",
                               "RGPAREN",
                               "LCPAREN",
                               "RCPAREN",
                               "LPAREN",
                               "RPAREN",
                               "VARIABLE",
                               "VALID_ID_START",
                               "VALID_ID_CHAR",
                               "NUMERIC",
                               "VERILOG_BINARY",
                               "GCC_BINARY",
                               "HEX",
                               "BOOLEAN",
                               "PLUS",
                               "MINUS",
                               "TIMES",
                               "DIV",
                               "GT",
                               "GE",
                               "LT",
                               "LE",
                               "EQ",
                               "NEQ",
                               "BAND",
                               "BOR",
                               "BXOR",
                               "NEG",
                               "LSHIFT",
                               "RSHIFT",
                               "AND",
                               "OR",
                               "NOT",
                               "WS"},
      std::vector<std::string>{"DEFAULT_TOKEN_CHANNEL", "HIDDEN"},
      std::vector<std::string>{"DEFAULT_MODE"},
      std::vector<std::string>{"",
                               "'P'",
                               "'..##'",
                               "'..#'",
                               "'..[->'",
                               "',bool>'",
                               "',logic('",
                               "','",
                               "')>'",
                               "',numeric('",
                               "'..&&..'",
                               "",
                               "'eventually'",
                               "'always'",
                               "'nexttime'",
                               "'until'",
                               "'release'",
                               "'..'",
                               "'|->'",
                               "'|=>'",
                               "'iff'",
                               "'xor'",
                               "'[]->'",
                               "'[]=>'",
                               "'='",
                               "'##'",
                               "';'",
                               "':'",
                               "'first_match'",
                               "",
                               "'{'",
                               "'}'",
                               "'['",
                               "']'",
                               "'('",
                               "')'",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "'+'",
                               "'-'",
                               "'*'",
                               "'/'",
                               "'>'",
                               "'>='",
                               "'<'",
                               "'<='",
                               "'=='",
                               "'!='",
                               "'&'",
                               "'|'",
                               "'^'",
                               "'~'",
                               "'<<'",
                               "'>>'",
                               "'&&'",
                               "'||'",
                               "'!'"},
      std::vector<std::string>{"",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "",
                               "DT_AND",
                               "SEP",
                               "EVENTUALLY",
                               "ALWAYS",
                               "NEXT",
                               "UNTIL",
                               "RELEASE",
                               "DOTS",
                               "IMPL",
                               "IMPL2",
                               "IFF",
                               "XOR",
                               "BIND1",
                               "BIND2",
                               "ASS",
                               "DELAY",
                               "SCOL",
                               "COL",
                               "FIRST_MATCH",
                               "SIGN",
                               "LGPAREN",
                               "RGPAREN",
                               "LCPAREN",
                               "RCPAREN",
                               "LPAREN",
                               "RPAREN",
                               "VARIABLE",
                               "NUMERIC",
                               "VERILOG_BINARY",
                               "GCC_BINARY",
                               "HEX",
                               "BOOLEAN",
                               "PLUS",
                               "MINUS",
                               "TIMES",
                               "DIV",
                               "GT",
                               "GE",
                               "LT",
                               "LE",
                               "EQ",
                               "NEQ",
                               "BAND",
                               "BOR",
                               "BXOR",
                               "NEG",
                               "LSHIFT",
                               "RSHIFT",
                               "AND",
                               "OR",
                               "NOT",
                               "WS"});
  static const int32_t serializedATNSegment[] = {
      4,   0,   61,  429, 6,   -1,  2,   0,   7,   0,   2,   1,   7,   1,   2,
      2,   7,   2,   2,   3,   7,   3,   2,   4,   7,   4,   2,   5,   7,   5,
      2,   6,   7,   6,   2,   7,   7,   7,   2,   8,   7,   8,   2,   9,   7,
      9,   2,   10,  7,   10,  2,   11,  7,   11,  2,   12,  7,   12,  2,   13,
      7,   13,  2,   14,  7,   14,  2,   15,  7,   15,  2,   16,  7,   16,  2,
      17,  7,   17,  2,   18,  7,   18,  2,   19,  7,   19,  2,   20,  7,   20,
      2,   21,  7,   21,  2,   22,  7,   22,  2,   23,  7,   23,  2,   24,  7,
      24,  2,   25,  7,   25,  2,   26,  7,   26,  2,   27,  7,   27,  2,   28,
      7,   28,  2,   29,  7,   29,  2,   30,  7,   30,  2,   31,  7,   31,  2,
      32,  7,   32,  2,   33,  7,   33,  2,   34,  7,   34,  2,   35,  7,   35,
      2,   36,  7,   36,  2,   37,  7,   37,  2,   38,  7,   38,  2,   39,  7,
      39,  2,   40,  7,   40,  2,   41,  7,   41,  2,   42,  7,   42,  2,   43,
      7,   43,  2,   44,  7,   44,  2,   45,  7,   45,  2,   46,  7,   46,  2,
      47,  7,   47,  2,   48,  7,   48,  2,   49,  7,   49,  2,   50,  7,   50,
      2,   51,  7,   51,  2,   52,  7,   52,  2,   53,  7,   53,  2,   54,  7,
      54,  2,   55,  7,   55,  2,   56,  7,   56,  2,   57,  7,   57,  2,   58,
      7,   58,  2,   59,  7,   59,  2,   60,  7,   60,  2,   61,  7,   61,  2,
      62,  7,   62,  1,   0,   1,   0,   1,   1,   1,   1,   1,   1,   1,   1,
      1,   1,   1,   2,   1,   2,   1,   2,   1,   2,   1,   3,   1,   3,   1,
      3,   1,   3,   1,   3,   1,   3,   1,   4,   1,   4,   1,   4,   1,   4,
      1,   4,   1,   4,   1,   4,   1,   5,   1,   5,   1,   5,   1,   5,   1,
      5,   1,   5,   1,   5,   1,   5,   1,   6,   1,   6,   1,   7,   1,   7,
      1,   7,   1,   8,   1,   8,   1,   8,   1,   8,   1,   8,   1,   8,   1,
      8,   1,   8,   1,   8,   1,   8,   1,   9,   1,   9,   1,   9,   1,   9,
      1,   9,   1,   9,   1,   9,   1,   10,  1,   10,  1,   10,  1,   10,  3,
      10,  186, 8,   10,  1,   11,  1,   11,  1,   11,  1,   11,  1,   11,  1,
      11,  1,   11,  1,   11,  1,   11,  1,   11,  1,   11,  1,   12,  1,   12,
      1,   12,  1,   12,  1,   12,  1,   12,  1,   12,  1,   13,  1,   13,  1,
      13,  1,   13,  1,   13,  1,   13,  1,   13,  1,   13,  1,   13,  1,   14,
      1,   14,  1,   14,  1,   14,  1,   14,  1,   14,  1,   15,  1,   15,  1,
      15,  1,   15,  1,   15,  1,   15,  1,   15,  1,   15,  1,   16,  1,   16,
      1,   16,  1,   17,  1,   17,  1,   17,  1,   17,  1,   18,  1,   18,  1,
      18,  1,   18,  1,   19,  1,   19,  1,   19,  1,   19,  1,   20,  1,   20,
      1,   20,  1,   20,  1,   21,  1,   21,  1,   21,  1,   21,  1,   21,  1,
      22,  1,   22,  1,   22,  1,   22,  1,   22,  1,   23,  1,   23,  1,   24,
      1,   24,  1,   24,  1,   25,  1,   25,  1,   26,  1,   26,  1,   27,  1,
      27,  1,   27,  1,   27,  1,   27,  1,   27,  1,   27,  1,   27,  1,   27,
      1,   27,  1,   27,  1,   27,  1,   28,  1,   28,  1,   29,  1,   29,  1,
      30,  1,   30,  1,   31,  1,   31,  1,   32,  1,   32,  1,   33,  1,   33,
      1,   34,  1,   34,  1,   35,  1,   35,  3,   35,  295, 8,   35,  1,   35,
      1,   35,  5,   35,  299, 8,   35,  10,  35,  12,  35,  302, 9,   35,  1,
      36,  1,   36,  3,   36,  306, 8,   36,  1,   36,  3,   36,  309, 8,   36,
      3,   36,  311, 8,   36,  1,   37,  1,   37,  1,   37,  3,   37,  316, 8,
      37,  1,   38,  3,   38,  319, 8,   38,  1,   38,  4,   38,  322, 8,   38,
      11,  38,  12,  38,  323, 1,   38,  1,   38,  4,   38,  328, 8,   38,  11,
      38,  12,  38,  329, 3,   38,  332, 8,   38,  1,   39,  1,   39,  1,   39,
      4,   39,  337, 8,   39,  11,  39,  12,  39,  338, 1,   40,  1,   40,  1,
      40,  1,   40,  4,   40,  345, 8,   40,  11,  40,  12,  40,  346, 1,   41,
      1,   41,  1,   41,  1,   41,  4,   41,  353, 8,   41,  11,  41,  12,  41,
      354, 1,   41,  1,   41,  1,   41,  1,   41,  4,   41,  361, 8,   41,  11,
      41,  12,  41,  362, 3,   41,  365, 8,   41,  1,   42,  1,   42,  1,   42,
      1,   42,  1,   42,  1,   42,  1,   42,  1,   42,  1,   42,  1,   42,  1,
      42,  3,   42,  378, 8,   42,  1,   43,  1,   43,  1,   44,  1,   44,  1,
      45,  1,   45,  1,   46,  1,   46,  1,   47,  1,   47,  1,   48,  1,   48,
      1,   48,  1,   49,  1,   49,  1,   50,  1,   50,  1,   50,  1,   51,  1,
      51,  1,   51,  1,   52,  1,   52,  1,   52,  1,   53,  1,   53,  1,   54,
      1,   54,  1,   55,  1,   55,  1,   56,  1,   56,  1,   57,  1,   57,  1,
      57,  1,   58,  1,   58,  1,   58,  1,   59,  1,   59,  1,   59,  1,   60,
      1,   60,  1,   60,  1,   61,  1,   61,  1,   62,  1,   62,  1,   62,  1,
      62,  0,   0,   63,  1,   1,   3,   2,   5,   3,   7,   4,   9,   5,   11,
      6,   13,  7,   15,  8,   17,  9,   19,  10,  21,  11,  23,  12,  25,  13,
      27,  14,  29,  15,  31,  16,  33,  17,  35,  18,  37,  19,  39,  20,  41,
      21,  43,  22,  45,  23,  47,  24,  49,  25,  51,  26,  53,  27,  55,  28,
      57,  29,  59,  30,  61,  31,  63,  32,  65,  33,  67,  34,  69,  35,  71,
      36,  73,  0,   75,  0,   77,  37,  79,  38,  81,  39,  83,  40,  85,  41,
      87,  42,  89,  43,  91,  44,  93,  45,  95,  46,  97,  47,  99,  48,  101,
      49,  103, 50,  105, 51,  107, 52,  109, 53,  111, 54,  113, 55,  115, 56,
      117, 57,  119, 58,  121, 59,  123, 60,  125, 61,  1,   0,   7,   2,   0,
      115, 115, 117, 117, 3,   0,   65,  90,  95,  95,  97,  122, 5,   0,   65,
      79,  81,  87,  89,  90,  95,  95,  97,  122, 5,   0,   46,  46,  48,  57,
      65,  90,  95,  95,  97,  122, 2,   0,   48,  57,  97,  102, 2,   0,   48,
      57,  65,  70,  3,   0,   9,   10,  13,  13,  32,  32,  441, 0,   1,   1,
      0,   0,   0,   0,   3,   1,   0,   0,   0,   0,   5,   1,   0,   0,   0,
      0,   7,   1,   0,   0,   0,   0,   9,   1,   0,   0,   0,   0,   11,  1,
      0,   0,   0,   0,   13,  1,   0,   0,   0,   0,   15,  1,   0,   0,   0,
      0,   17,  1,   0,   0,   0,   0,   19,  1,   0,   0,   0,   0,   21,  1,
      0,   0,   0,   0,   23,  1,   0,   0,   0,   0,   25,  1,   0,   0,   0,
      0,   27,  1,   0,   0,   0,   0,   29,  1,   0,   0,   0,   0,   31,  1,
      0,   0,   0,   0,   33,  1,   0,   0,   0,   0,   35,  1,   0,   0,   0,
      0,   37,  1,   0,   0,   0,   0,   39,  1,   0,   0,   0,   0,   41,  1,
      0,   0,   0,   0,   43,  1,   0,   0,   0,   0,   45,  1,   0,   0,   0,
      0,   47,  1,   0,   0,   0,   0,   49,  1,   0,   0,   0,   0,   51,  1,
      0,   0,   0,   0,   53,  1,   0,   0,   0,   0,   55,  1,   0,   0,   0,
      0,   57,  1,   0,   0,   0,   0,   59,  1,   0,   0,   0,   0,   61,  1,
      0,   0,   0,   0,   63,  1,   0,   0,   0,   0,   65,  1,   0,   0,   0,
      0,   67,  1,   0,   0,   0,   0,   69,  1,   0,   0,   0,   0,   71,  1,
      0,   0,   0,   0,   77,  1,   0,   0,   0,   0,   79,  1,   0,   0,   0,
      0,   81,  1,   0,   0,   0,   0,   83,  1,   0,   0,   0,   0,   85,  1,
      0,   0,   0,   0,   87,  1,   0,   0,   0,   0,   89,  1,   0,   0,   0,
      0,   91,  1,   0,   0,   0,   0,   93,  1,   0,   0,   0,   0,   95,  1,
      0,   0,   0,   0,   97,  1,   0,   0,   0,   0,   99,  1,   0,   0,   0,
      0,   101, 1,   0,   0,   0,   0,   103, 1,   0,   0,   0,   0,   105, 1,
      0,   0,   0,   0,   107, 1,   0,   0,   0,   0,   109, 1,   0,   0,   0,
      0,   111, 1,   0,   0,   0,   0,   113, 1,   0,   0,   0,   0,   115, 1,
      0,   0,   0,   0,   117, 1,   0,   0,   0,   0,   119, 1,   0,   0,   0,
      0,   121, 1,   0,   0,   0,   0,   123, 1,   0,   0,   0,   0,   125, 1,
      0,   0,   0,   1,   127, 1,   0,   0,   0,   3,   129, 1,   0,   0,   0,
      5,   134, 1,   0,   0,   0,   7,   138, 1,   0,   0,   0,   9,   144, 1,
      0,   0,   0,   11,  151, 1,   0,   0,   0,   13,  159, 1,   0,   0,   0,
      15,  161, 1,   0,   0,   0,   17,  164, 1,   0,   0,   0,   19,  174, 1,
      0,   0,   0,   21,  185, 1,   0,   0,   0,   23,  187, 1,   0,   0,   0,
      25,  198, 1,   0,   0,   0,   27,  205, 1,   0,   0,   0,   29,  214, 1,
      0,   0,   0,   31,  220, 1,   0,   0,   0,   33,  228, 1,   0,   0,   0,
      35,  231, 1,   0,   0,   0,   37,  235, 1,   0,   0,   0,   39,  239, 1,
      0,   0,   0,   41,  243, 1,   0,   0,   0,   43,  247, 1,   0,   0,   0,
      45,  252, 1,   0,   0,   0,   47,  257, 1,   0,   0,   0,   49,  259, 1,
      0,   0,   0,   51,  262, 1,   0,   0,   0,   53,  264, 1,   0,   0,   0,
      55,  266, 1,   0,   0,   0,   57,  278, 1,   0,   0,   0,   59,  280, 1,
      0,   0,   0,   61,  282, 1,   0,   0,   0,   63,  284, 1,   0,   0,   0,
      65,  286, 1,   0,   0,   0,   67,  288, 1,   0,   0,   0,   69,  290, 1,
      0,   0,   0,   71,  294, 1,   0,   0,   0,   73,  310, 1,   0,   0,   0,
      75,  315, 1,   0,   0,   0,   77,  318, 1,   0,   0,   0,   79,  333, 1,
      0,   0,   0,   81,  340, 1,   0,   0,   0,   83,  364, 1,   0,   0,   0,
      85,  377, 1,   0,   0,   0,   87,  379, 1,   0,   0,   0,   89,  381, 1,
      0,   0,   0,   91,  383, 1,   0,   0,   0,   93,  385, 1,   0,   0,   0,
      95,  387, 1,   0,   0,   0,   97,  389, 1,   0,   0,   0,   99,  392, 1,
      0,   0,   0,   101, 394, 1,   0,   0,   0,   103, 397, 1,   0,   0,   0,
      105, 400, 1,   0,   0,   0,   107, 403, 1,   0,   0,   0,   109, 405, 1,
      0,   0,   0,   111, 407, 1,   0,   0,   0,   113, 409, 1,   0,   0,   0,
      115, 411, 1,   0,   0,   0,   117, 414, 1,   0,   0,   0,   119, 417, 1,
      0,   0,   0,   121, 420, 1,   0,   0,   0,   123, 423, 1,   0,   0,   0,
      125, 425, 1,   0,   0,   0,   127, 128, 5,   80,  0,   0,   128, 2,   1,
      0,   0,   0,   129, 130, 5,   46,  0,   0,   130, 131, 5,   46,  0,   0,
      131, 132, 5,   35,  0,   0,   132, 133, 5,   35,  0,   0,   133, 4,   1,
      0,   0,   0,   134, 135, 5,   46,  0,   0,   135, 136, 5,   46,  0,   0,
      136, 137, 5,   35,  0,   0,   137, 6,   1,   0,   0,   0,   138, 139, 5,
      46,  0,   0,   139, 140, 5,   46,  0,   0,   140, 141, 5,   91,  0,   0,
      141, 142, 5,   45,  0,   0,   142, 143, 5,   62,  0,   0,   143, 8,   1,
      0,   0,   0,   144, 145, 5,   44,  0,   0,   145, 146, 5,   98,  0,   0,
      146, 147, 5,   111, 0,   0,   147, 148, 5,   111, 0,   0,   148, 149, 5,
      108, 0,   0,   149, 150, 5,   62,  0,   0,   150, 10,  1,   0,   0,   0,
      151, 152, 5,   44,  0,   0,   152, 153, 5,   108, 0,   0,   153, 154, 5,
      111, 0,   0,   154, 155, 5,   103, 0,   0,   155, 156, 5,   105, 0,   0,
      156, 157, 5,   99,  0,   0,   157, 158, 5,   40,  0,   0,   158, 12,  1,
      0,   0,   0,   159, 160, 5,   44,  0,   0,   160, 14,  1,   0,   0,   0,
      161, 162, 5,   41,  0,   0,   162, 163, 5,   62,  0,   0,   163, 16,  1,
      0,   0,   0,   164, 165, 5,   44,  0,   0,   165, 166, 5,   110, 0,   0,
      166, 167, 5,   117, 0,   0,   167, 168, 5,   109, 0,   0,   168, 169, 5,
      101, 0,   0,   169, 170, 5,   114, 0,   0,   170, 171, 5,   105, 0,   0,
      171, 172, 5,   99,  0,   0,   172, 173, 5,   40,  0,   0,   173, 18,  1,
      0,   0,   0,   174, 175, 5,   46,  0,   0,   175, 176, 5,   46,  0,   0,
      176, 177, 5,   38,  0,   0,   177, 178, 5,   38,  0,   0,   178, 179, 5,
      46,  0,   0,   179, 180, 5,   46,  0,   0,   180, 20,  1,   0,   0,   0,
      181, 182, 5,   64,  0,   0,   182, 186, 5,   58,  0,   0,   183, 184, 5,
      64,  0,   0,   184, 186, 5,   59,  0,   0,   185, 181, 1,   0,   0,   0,
      185, 183, 1,   0,   0,   0,   186, 22,  1,   0,   0,   0,   187, 188, 5,
      101, 0,   0,   188, 189, 5,   118, 0,   0,   189, 190, 5,   101, 0,   0,
      190, 191, 5,   110, 0,   0,   191, 192, 5,   116, 0,   0,   192, 193, 5,
      117, 0,   0,   193, 194, 5,   97,  0,   0,   194, 195, 5,   108, 0,   0,
      195, 196, 5,   108, 0,   0,   196, 197, 5,   121, 0,   0,   197, 24,  1,
      0,   0,   0,   198, 199, 5,   97,  0,   0,   199, 200, 5,   108, 0,   0,
      200, 201, 5,   119, 0,   0,   201, 202, 5,   97,  0,   0,   202, 203, 5,
      121, 0,   0,   203, 204, 5,   115, 0,   0,   204, 26,  1,   0,   0,   0,
      205, 206, 5,   110, 0,   0,   206, 207, 5,   101, 0,   0,   207, 208, 5,
      120, 0,   0,   208, 209, 5,   116, 0,   0,   209, 210, 5,   116, 0,   0,
      210, 211, 5,   105, 0,   0,   211, 212, 5,   109, 0,   0,   212, 213, 5,
      101, 0,   0,   213, 28,  1,   0,   0,   0,   214, 215, 5,   117, 0,   0,
      215, 216, 5,   110, 0,   0,   216, 217, 5,   116, 0,   0,   217, 218, 5,
      105, 0,   0,   218, 219, 5,   108, 0,   0,   219, 30,  1,   0,   0,   0,
      220, 221, 5,   114, 0,   0,   221, 222, 5,   101, 0,   0,   222, 223, 5,
      108, 0,   0,   223, 224, 5,   101, 0,   0,   224, 225, 5,   97,  0,   0,
      225, 226, 5,   115, 0,   0,   226, 227, 5,   101, 0,   0,   227, 32,  1,
      0,   0,   0,   228, 229, 5,   46,  0,   0,   229, 230, 5,   46,  0,   0,
      230, 34,  1,   0,   0,   0,   231, 232, 5,   124, 0,   0,   232, 233, 5,
      45,  0,   0,   233, 234, 5,   62,  0,   0,   234, 36,  1,   0,   0,   0,
      235, 236, 5,   124, 0,   0,   236, 237, 5,   61,  0,   0,   237, 238, 5,
      62,  0,   0,   238, 38,  1,   0,   0,   0,   239, 240, 5,   105, 0,   0,
      240, 241, 5,   102, 0,   0,   241, 242, 5,   102, 0,   0,   242, 40,  1,
      0,   0,   0,   243, 244, 5,   120, 0,   0,   244, 245, 5,   111, 0,   0,
      245, 246, 5,   114, 0,   0,   246, 42,  1,   0,   0,   0,   247, 248, 5,
      91,  0,   0,   248, 249, 5,   93,  0,   0,   249, 250, 5,   45,  0,   0,
      250, 251, 5,   62,  0,   0,   251, 44,  1,   0,   0,   0,   252, 253, 5,
      91,  0,   0,   253, 254, 5,   93,  0,   0,   254, 255, 5,   61,  0,   0,
      255, 256, 5,   62,  0,   0,   256, 46,  1,   0,   0,   0,   257, 258, 5,
      61,  0,   0,   258, 48,  1,   0,   0,   0,   259, 260, 5,   35,  0,   0,
      260, 261, 5,   35,  0,   0,   261, 50,  1,   0,   0,   0,   262, 263, 5,
      59,  0,   0,   263, 52,  1,   0,   0,   0,   264, 265, 5,   58,  0,   0,
      265, 54,  1,   0,   0,   0,   266, 267, 5,   102, 0,   0,   267, 268, 5,
      105, 0,   0,   268, 269, 5,   114, 0,   0,   269, 270, 5,   115, 0,   0,
      270, 271, 5,   116, 0,   0,   271, 272, 5,   95,  0,   0,   272, 273, 5,
      109, 0,   0,   273, 274, 5,   97,  0,   0,   274, 275, 5,   116, 0,   0,
      275, 276, 5,   99,  0,   0,   276, 277, 5,   104, 0,   0,   277, 56,  1,
      0,   0,   0,   278, 279, 7,   0,   0,   0,   279, 58,  1,   0,   0,   0,
      280, 281, 5,   123, 0,   0,   281, 60,  1,   0,   0,   0,   282, 283, 5,
      125, 0,   0,   283, 62,  1,   0,   0,   0,   284, 285, 5,   91,  0,   0,
      285, 64,  1,   0,   0,   0,   286, 287, 5,   93,  0,   0,   287, 66,  1,
      0,   0,   0,   288, 289, 5,   40,  0,   0,   289, 68,  1,   0,   0,   0,
      290, 291, 5,   41,  0,   0,   291, 70,  1,   0,   0,   0,   292, 293, 5,
      58,  0,   0,   293, 295, 5,   58,  0,   0,   294, 292, 1,   0,   0,   0,
      294, 295, 1,   0,   0,   0,   295, 296, 1,   0,   0,   0,   296, 300, 3,
      73,  36,  0,   297, 299, 3,   75,  37,  0,   298, 297, 1,   0,   0,   0,
      299, 302, 1,   0,   0,   0,   300, 298, 1,   0,   0,   0,   300, 301, 1,
      0,   0,   0,   301, 72,  1,   0,   0,   0,   302, 300, 1,   0,   0,   0,
      303, 305, 5,   80,  0,   0,   304, 306, 7,   1,   0,   0,   305, 304, 1,
      0,   0,   0,   306, 311, 1,   0,   0,   0,   307, 309, 7,   2,   0,   0,
      308, 307, 1,   0,   0,   0,   309, 311, 1,   0,   0,   0,   310, 303, 1,
      0,   0,   0,   310, 308, 1,   0,   0,   0,   311, 74,  1,   0,   0,   0,
      312, 316, 7,   3,   0,   0,   313, 314, 5,   58,  0,   0,   314, 316, 5,
      58,  0,   0,   315, 312, 1,   0,   0,   0,   315, 313, 1,   0,   0,   0,
      316, 76,  1,   0,   0,   0,   317, 319, 5,   45,  0,   0,   318, 317, 1,
      0,   0,   0,   318, 319, 1,   0,   0,   0,   319, 321, 1,   0,   0,   0,
      320, 322, 2,   48,  57,  0,   321, 320, 1,   0,   0,   0,   322, 323, 1,
      0,   0,   0,   323, 321, 1,   0,   0,   0,   323, 324, 1,   0,   0,   0,
      324, 331, 1,   0,   0,   0,   325, 327, 5,   46,  0,   0,   326, 328, 2,
      48,  57,  0,   327, 326, 1,   0,   0,   0,   328, 329, 1,   0,   0,   0,
      329, 327, 1,   0,   0,   0,   329, 330, 1,   0,   0,   0,   330, 332, 1,
      0,   0,   0,   331, 325, 1,   0,   0,   0,   331, 332, 1,   0,   0,   0,
      332, 78,  1,   0,   0,   0,   333, 334, 5,   39,  0,   0,   334, 336, 5,
      98,  0,   0,   335, 337, 2,   48,  49,  0,   336, 335, 1,   0,   0,   0,
      337, 338, 1,   0,   0,   0,   338, 336, 1,   0,   0,   0,   338, 339, 1,
      0,   0,   0,   339, 80,  1,   0,   0,   0,   340, 341, 5,   48,  0,   0,
      341, 342, 5,   98,  0,   0,   342, 344, 1,   0,   0,   0,   343, 345, 2,
      48,  49,  0,   344, 343, 1,   0,   0,   0,   345, 346, 1,   0,   0,   0,
      346, 344, 1,   0,   0,   0,   346, 347, 1,   0,   0,   0,   347, 82,  1,
      0,   0,   0,   348, 349, 5,   48,  0,   0,   349, 350, 5,   120, 0,   0,
      350, 352, 1,   0,   0,   0,   351, 353, 7,   4,   0,   0,   352, 351, 1,
      0,   0,   0,   353, 354, 1,   0,   0,   0,   354, 352, 1,   0,   0,   0,
      354, 355, 1,   0,   0,   0,   355, 365, 1,   0,   0,   0,   356, 357, 5,
      48,  0,   0,   357, 358, 5,   120, 0,   0,   358, 360, 1,   0,   0,   0,
      359, 361, 7,   5,   0,   0,   360, 359, 1,   0,   0,   0,   361, 362, 1,
      0,   0,   0,   362, 360, 1,   0,   0,   0,   362, 363, 1,   0,   0,   0,
      363, 365, 1,   0,   0,   0,   364, 348, 1,   0,   0,   0,   364, 356, 1,
      0,   0,   0,   365, 84,  1,   0,   0,   0,   366, 367, 5,   64,  0,   0,
      367, 368, 5,   116, 0,   0,   368, 369, 5,   114, 0,   0,   369, 370, 5,
      117, 0,   0,   370, 378, 5,   101, 0,   0,   371, 372, 5,   64,  0,   0,
      372, 373, 5,   102, 0,   0,   373, 374, 5,   97,  0,   0,   374, 375, 5,
      108, 0,   0,   375, 376, 5,   115, 0,   0,   376, 378, 5,   101, 0,   0,
      377, 366, 1,   0,   0,   0,   377, 371, 1,   0,   0,   0,   378, 86,  1,
      0,   0,   0,   379, 380, 5,   43,  0,   0,   380, 88,  1,   0,   0,   0,
      381, 382, 5,   45,  0,   0,   382, 90,  1,   0,   0,   0,   383, 384, 5,
      42,  0,   0,   384, 92,  1,   0,   0,   0,   385, 386, 5,   47,  0,   0,
      386, 94,  1,   0,   0,   0,   387, 388, 5,   62,  0,   0,   388, 96,  1,
      0,   0,   0,   389, 390, 5,   62,  0,   0,   390, 391, 5,   61,  0,   0,
      391, 98,  1,   0,   0,   0,   392, 393, 5,   60,  0,   0,   393, 100, 1,
      0,   0,   0,   394, 395, 5,   60,  0,   0,   395, 396, 5,   61,  0,   0,
      396, 102, 1,   0,   0,   0,   397, 398, 5,   61,  0,   0,   398, 399, 5,
      61,  0,   0,   399, 104, 1,   0,   0,   0,   400, 401, 5,   33,  0,   0,
      401, 402, 5,   61,  0,   0,   402, 106, 1,   0,   0,   0,   403, 404, 5,
      38,  0,   0,   404, 108, 1,   0,   0,   0,   405, 406, 5,   124, 0,   0,
      406, 110, 1,   0,   0,   0,   407, 408, 5,   94,  0,   0,   408, 112, 1,
      0,   0,   0,   409, 410, 5,   126, 0,   0,   410, 114, 1,   0,   0,   0,
      411, 412, 5,   60,  0,   0,   412, 413, 5,   60,  0,   0,   413, 116, 1,
      0,   0,   0,   414, 415, 5,   62,  0,   0,   415, 416, 5,   62,  0,   0,
      416, 118, 1,   0,   0,   0,   417, 418, 5,   38,  0,   0,   418, 419, 5,
      38,  0,   0,   419, 120, 1,   0,   0,   0,   420, 421, 5,   124, 0,   0,
      421, 422, 5,   124, 0,   0,   422, 122, 1,   0,   0,   0,   423, 424, 5,
      33,  0,   0,   424, 124, 1,   0,   0,   0,   425, 426, 7,   6,   0,   0,
      426, 427, 1,   0,   0,   0,   427, 428, 6,   62,  0,   0,   428, 126, 1,
      0,   0,   0,   20,  0,   185, 294, 300, 305, 308, 310, 315, 318, 323, 329,
      331, 338, 346, 352, 354, 360, 362, 364, 377, 1,   6,   0,   0};
  staticData->serializedATN = antlr4::atn::SerializedATNView(
      serializedATNSegment,
      sizeof(serializedATNSegment) / sizeof(serializedATNSegment[0]));

  antlr4::atn::ATNDeserializer deserializer;
  staticData->atn = deserializer.deserialize(staticData->serializedATN);

  const size_t count = staticData->atn->getNumberOfDecisions();
  staticData->decisionToDFA.reserve(count);
  for (size_t i = 0; i < count; i++) {
    staticData->decisionToDFA.emplace_back(staticData->atn->getDecisionState(i),
                                           i);
  }
  svalexerLexerStaticData = staticData.release();
}

} // namespace

svaLexer::svaLexer(CharStream *input) : Lexer(input) {
  svaLexer::initialize();
  _interpreter =
      new atn::LexerATNSimulator(this, *svalexerLexerStaticData->atn,
                                 svalexerLexerStaticData->decisionToDFA,
                                 svalexerLexerStaticData->sharedContextCache);
}

svaLexer::~svaLexer() { delete _interpreter; }

std::string svaLexer::getGrammarFileName() const { return "sva.g4"; }

const std::vector<std::string> &svaLexer::getRuleNames() const {
  return svalexerLexerStaticData->ruleNames;
}

const std::vector<std::string> &svaLexer::getChannelNames() const {
  return svalexerLexerStaticData->channelNames;
}

const std::vector<std::string> &svaLexer::getModeNames() const {
  return svalexerLexerStaticData->modeNames;
}

const dfa::Vocabulary &svaLexer::getVocabulary() const {
  return svalexerLexerStaticData->vocabulary;
}

antlr4::atn::SerializedATNView svaLexer::getSerializedATN() const {
  return svalexerLexerStaticData->serializedATN;
}

const atn::ATN &svaLexer::getATN() const {
  return *svalexerLexerStaticData->atn;
}

void svaLexer::initialize() {
  std::call_once(svalexerLexerOnceFlag, svalexerLexerInitialize);
}
